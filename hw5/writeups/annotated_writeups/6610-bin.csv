6610-bin,1,Lost File,
6610-bin,2,Heeelp! I did a rm on my python file,
6610-bin,3,All my work is gone! Would you help me restore it?,
6610-bin,4,I usually work with a virtualenv if this info can help you.,
6610-bin,5,ssh lost-file@lost-file.ctf.insecurity-insa.fr (password lost-file),
6610-bin,6,lost-file@c080471a8de3:/app$ ps aux | grep python,
6610-bin,7,lost-fi+     6  0.0  0.1  21908  2772 ?        S    12:09   0:00 python2 /app/challenge.py,
6610-bin,8,"My first approach was to look for a pyc still somewhere resident in /proc/$PID/fd/$FD, but alas, I had no luck",
6610-bin,9,"Yet, the python program was still running and hitherto still in memory.",
6610-bin,10,A month ago I remember reading on HackerNews a gist about how to recover lost Python source code if it's still resident in-memory,
6610-bin,11,"I tried it with varying degrees of success, but there were some missing dependencies so I'll report the full install procedure below:",
6610-bin,12,lost-file@c080471a8de3:/app$ virtualenv pyrasite,
6610-bin,13,lost-file@c080471a8de3:/app$ pyrasite/bin/pip install pyrasite,
6610-bin,14,lost-file@c080471a8de3:/app$ pyrasite/bin/pip install uncompyle6,
6610-bin,15,"lost-file@c080471a8de3:/app$ pyrasite/bin/pyrasite-shell $(pgrep -f ""python"")",
6610-bin,16,You can now use several payloads.,
6610-bin,17,"If you want to extract the source, you'll need meliae, a python memory analysis tool",(I)
6610-bin,18,On the challenge box I had problems while executing pyrasite/bin/pip install meliae so I resorted to manually downloading and compiling the source:,(I) 17
6610-bin,19,lost-file@6083c16196b7:/app$ pip install Cython,
6610-bin,20,"lost-file@6083c16196b7:/app$ pyrasite/bin/pip install --download=""."" meliae",
6610-bin,21,lost-file@6083c16196b7:/app$ tar -zxvf meliae-0.4.0.tar.gz ; rm meliae-0.4.0.tar.gz; cd meliae-0.4.0/ ;,
6610-bin,22,lost-file@6083c16196b7:/app/meliae-0.4.0$ python ./setup.py install,
6610-bin,23,"and then, when the attached python shell popped:",(A)18
6610-bin,24,# Embedded file name: /app/challenge.py,
6610-bin,25,"return ''.join((chr(ord(c) ^ ord(k)) for c, k in izip(base64.decodestring(a), cycle(b))))",
6610-bin,26,We also used globals() to get the c var:,
6610-bin,27,Decoding c and using this xor cracker lead us to the source of /app/challenge.py:,
6610-bin,28,"printf(""You have failed"")",
6610-bin,29,def done():,
6610-bin,30,"printf(""Well done"")",
6610-bin,31,"In the backdoor function, xoring the base64-decoded data var ('Hj4GKR53QQAzKmEjRD40O1sjGAo4VE0YUxgI') with k ('WpUhe9pcVu1OpGklj') gives us the flag, which decodes to INSA{N1ce_Pl4y_W1th_P1th0N}.",(A) 23
6610-bin,32,Please enable JavaScript to view the comments powered by Disqus.,
6610-bin,33,visit us on,
6610-bin,34,actually collaborating with JBZ team,
6610-bin,35,subscribe via RSS,
